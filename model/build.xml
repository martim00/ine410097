<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
	      Any modifications will be overwritten.
	      To include a user specific buildfile here, simply create one in the same
	      directory with the processing instruction <?eclipse.ant.import?>
	      as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="Agil">
	<property environment="env" />
	<property name="ECLIPSE_HOME" value="../../../../../Program Files (x86)/Eclipse" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.6" />
	<property name="source" value="1.6" />
	<path id="JUnit 4.libraryclasspath">
		<pathelement location="lib/junit.jar" />
		<pathelement location="lib/org.hamcrest.core_1.1.0.v20090501071000.jar" />
	</path>
	<path id="EAR Libraries.libraryclasspath"/>
	<path id="Agil.classpath">
		<pathelement location="bin" />
		<path refid="JUnit 4.libraryclasspath" />
		<pathelement location="lib/hibernate3.jar"/>
		<pathelement location="lib/antlr-2.7.6.jar"/>
		<pathelement location="lib/commons-collections-3.1.jar"/>
		<pathelement location="lib/dom4j-1.6.1.jar"/>
		<pathelement location="lib/javassist-3.12.0.GA.jar"/>
		<pathelement location="lib/jta-1.1.jar"/>
		<pathelement location="lib/hibernate-jpa-2.0-api-1.0.1.Final.jar"/>
		<pathelement location="lib/slf4j-api-1.6.1.jar"/>
		<pathelement location="lib/slf4j-simple-1.6.1.jar"/>
		<pathelement location="lib/mysql-connector-java-5.1.22-bin.jar"/>
		<path refid="EAR Libraries.libraryclasspath"/>
		<pathelement location="lib/tablelize_it.jar"/>
	</path>
	<target name="init">
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin" />
	</target>
	<target depends="clean" name="cleanall" />
	<target depends="build-subprojects,build-project" name="build" />
	<target name="build-subprojects" />
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
			<src path="src" />
			<classpath refid="Agil.classpath" />
		</javac>
	</target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar" />
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</unzip>
	</target>
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
		<antcall target="build" />
	</target>


	<target name="build-and-test" depends="build">
		<junit dir="" fork="yes" haltonfailure="yes">
			<test name="teste.QlqrCoisaTest" />
			<formatter type="plain" usefile="false" />
			<classpath refid="Agil.classpath" />
		</junit>
	</target>



	<!-- directory that contains emma.jar and emma_ant.jar: -->
	  <property name="emma.dir" value="${basedir}/lib" />

	  <path id="emma.lib" >
		  <pathelement location="${emma.dir}/emma.jar" />
		  <pathelement location="${emma.dir}/emma_ant.jar" />
	  </path>

	  <taskdef resource="emma_ant.properties" classpathref="emma.lib" />

	<target name="emma" description="turns on EMMA's on-the-fly instrumentation mode" >
		<property name="emma.enabled" value="true" />
	</target>

	<target name="build-and-test-coverage" depends="build-and-test" description="runs the examples" >
		<emmajava enabled="true" libclasspathref="emma.lib" classname="teste.Main" classpathref= "Agil.classpath">
		</emmajava>

		<loadfile property="mytext" srcFile="${basedir}/coverage.txt"/> 

		<echo>${mytext}</echo> 
		
	  </target>
</project>
